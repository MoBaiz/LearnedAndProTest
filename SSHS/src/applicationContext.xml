<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- 引入属性文件,config.properties位于src/main/resources目录下 -->
    <context:property-placeholder location="classpath:config.properties" />
	<context:annotation-config/>
    <!-- 自动扫描dao和service包(自动注入) -->
    <context:component-scan base-package="org.amoyiki.*" />
    <!-- 定义数据源Bean，使用C3P0数据源实现 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<!-- 指定连接数据库的驱动 -->
		<property name="driverClass" value="${jdbc.driverClass}"/>
		<!-- 指定连接数据库的URL -->
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
		<!-- 指定连接数据库的用户名 -->
		<property name="user" value="${jdbc.user}"/>
		<!-- 指定连接数据库的密码 -->
		<property name="password" value="${jdbc.password}"/>
		<!-- 指定连接数据库连接池的最大连接数 -->
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
		<!-- 指定连接数据库连接池的最小连接数 -->
		<property name="minPoolSize" value="${jdbc.minPoolSize}"/>
		<!-- 指定连接数据库连接池的初始化连接数 -->
		<property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>
		<!-- 指定连接数据库连接池的连接的最大空闲时间 -->
		<property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>
	</bean>
	<!-- 配置hibernate session工厂 -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties">
            <props>
                <!-- web项目启动时是否更新表结构 -->
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <!-- 系统使用的数据库方言，也就是使用的数据库类型 -->
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <!-- 是否打印Hibernate生成的SQL到控制台 -->
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <!-- 是否格式化打印出来的SQL -->
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
            </props>
        </property>
        <!-- 自动扫描注解方式配置的hibernate类文件 -->
        <property name="packagesToScan">
            <list>
                <value>org.amoyiki.entity</value>
            </list>
        </property>
    </bean>
    
    <!-- 配置事务管理器 -->
    <bean name="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <!-- 注解方式配置事物 -->
    <!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">  
	    <tx:attributes>  
	        <tx:method name="save*" propagation="REQUIRED" />  
	        <tx:method name="add*" propagation="REQUIRED" />  
	        <tx:method name="insert*" propagation="REQUIRED" />  
	        <tx:method name="update*" propagation="REQUIRED" />  
	        <tx:method name="del*" propagation="REQUIRED" />  
	        <!--hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到-->  
	        <tx:method name="get*" propagation="REQUIRED" read-only="true" />  
	        <tx:method name="count*" propagation="REQUIRED" read-only="true" />  
	        <tx:method name="find*" propagation="REQUIRED" read-only="true" />  
	        <tx:method name="list*" propagation="REQUIRED" read-only="true" />  
	        <tx:method name="*" read-only="true" />  
	    </tx:attributes>  
	</tx:advice>  
	<aop:config expose-proxy="true">  
	    <!-- 只对业务逻辑层实施事务 -->  
	    <aop:pointcut id="txPointcut" expression="execution(* org.amoyiki.dao..*.*(..))" />  
	    <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>  
	</aop:config>  
	<!-- shior配置  begin -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
       <!--  <property name="cacheManager" ref="cacheManager"/> -->
        <property name="realm" ref="myRealm"/> <!-- 需要更改-->
    </bean>
    
 	<aop:config proxy-target-class="true"/>
     <!-- <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager"/> -->
	<!-- use md5 to hash passord -->
	<bean id="MD5Matcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="md5"/>
		<property name="storedCredentialsHexEncoded" value="true"/>
	</bean>

     <bean id="myRealm" class="org.amoyiki.realm.MyRealm">
	  <property name="credentialsMatcher" ref="MD5Matcher"/>
	  <property name="permissionResolver" ref="urlPermissionResolver" />
    </bean>
    <bean id="urlPermission" class="org.amoyiki.permission.UrlPermission" />
    <bean id="urlPermissionResolver" class="org.amoyiki.permission.UrlPermissionResovler"/>
    
     <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
     
    <!-- Enable Shiro Annotations for Spring-configured beans.  Only run after the lifecycleBeanProcessor has run: -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
	    depends-on="lifecycleBeanPostProcessor">
	    <property name="proxyTargetClass" value="true" />  <!-- 和struts结合使用必须把该属性设置为true，否则使用注解出错 -->    
    </bean>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
     
     
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
      <property name="securityManager" ref="securityManager"/>
      <property name="loginUrl" value="/login.jsp"/>
      <!-- <property name="successUrl" value=""/> -->
      <property name="unauthorizedUrl" value="/un.jsp"/>
      <property name="filters">
	        <map>
	            <entry key="authc">
	                <bean class="org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter" />
	            </entry>
	            <entry key="resourceCheckFilter">
	                <bean class="org.amoyiki.filter.ResourceCheckFilter" />
	            </entry>
	        </map>
	    </property>  
      <property name="filterChainDefinitions">
          <value>
          	  /index.jsp = anon
              /user/** = authc,resourceCheckFilter
              /logout =logout
          </value>
      </property>
  </bean>
   <!-- shior配置  end -->	
	
</beans>